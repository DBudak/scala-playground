[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[warn] No sbt.version set in project/build.properties, base directory: S:\coding\scala-playground
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_301)
[debug] Load.defaultLoad until apply took 420.1619ms
[debug]     Load.loadUnit: plugins took 60.907ms
[debug]     Load.loadUnit: defsScala took 0.2451ms
[debug] [Loading] Scanning directory S:\coding\scala-playground
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in S:\coding\scala-playground, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.0051 ms
[debug]         Load.resolveProject(scala-playground) took 33.7953ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-playground, base: S:\coding\scala-playground, plugins: List(<none>))) took 66.924ms
[debug] [Loading] Done in S:\coding\scala-playground, returning: (scala-playground)
[debug]     Load.loadUnit: loadedProjectsRaw took 79.4148ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.1769ms
[debug]   Load.loadUnit(file:/S:/coding/scala-playground/, ...) took 149.249ms
[debug] Load.apply: load took 266.2633ms
[debug] Load.apply: resolveProjects took 4.3403ms
[debug] Load.apply: finalTransforms took 39.0579ms
[debug] Load.apply: config.delegates took 5.6875ms
[debug] Load.apply: Def.make(settings)... took 260.9303ms
[debug] Load.apply: structureIndex took 68.8304ms
[debug] Load.apply: mkStreams took 1.134ms
[info] set current project to scala-playground (in build file:/S:/coding/scala-playground/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-8d5d0c2a4440c351280f
[debug] Writing bsp connection file
[info] started sbt server
[info] shutting down sbt server
